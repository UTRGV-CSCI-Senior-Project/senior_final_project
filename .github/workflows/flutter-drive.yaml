# Name of the workflow
name: Unit and Integration tests
# This work flow is triggered when pull requests are opened or updated
on: [pull_request]
# A workflow run is made up of one or more jobs.
jobs:
  # id of job, a string that is unique to the "jobs" node above.
  iphone:
    # The type of machine to run the job on.
    runs-on: macOS-latest
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    strategy:
      # When set to true, GitHub cancels all in-progress jobs if any        
      # matrix job fails.
      fail-fast: true
    # Contains a sequence of tasks.
    steps:
    # The branch or tag ref that triggered the workflow will be 
    # checked out.
    # https://github.com/actions/checkout
    - uses: actions/checkout@v3
    #Sets up Firebase Config files
    - name: Write firebase_options.dart
      run: echo '${{ secrets.FIREBASE_OPTIONS }}' > lib/firebase_options.dart
    - name: Write GoogleService-info.plist
      run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist
    - name: Write google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
    - name: Write firebase.json
      run: echo '${{ secrets.FIREBASE_JSON }}' > firebase.json
    # Sets up a flutter environment.
    # https://github.com/marketplace/actions/flutter-action
    - name: Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # or: 'dev' or 'beta'
    # Unit Tests
    - name: Run Unit Tests
      run: flutter test
    # Set up IOS simulator and run integration tests
    - name: "Set up simulator"
      uses: futureware-tech/simulator-action@v3
      with:
        model: 'iPhone 14'
        os_version: '>=13.0'
    - name: "Run Integration Tests"
      run: flutter pub get && flutter test integration_test

  android:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    
    steps:
    - uses: actions/checkout@v3
    #Sets up Firebase Config files
    - name: Write firebase_options.dart
      run: echo '${{ secrets.FIREBASE_OPTIONS }}' > lib/firebase_options.dart
    - name: Write GoogleService-info.plist
      run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist
    - name: Write google-services.json
      run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
    - name: Write firebase.json
      run: echo '${{ secrets.FIREBASE_JSON }}' > firebase.json
      
    - name: Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable' # or: 'dev' or 'beta'

    - name: Run Unit Tests
      run: flutter test
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Create and start emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        arch: x86_64
        profile: Nexus 6
        script: |
          adb wait-for-device
          flutter pub get
          flutter integration_test
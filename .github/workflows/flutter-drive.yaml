# Name of the workflow
name: Unit and Integration tests
# This work flow is triggered when pull requests are opened or updated
on: [pull_request]
# A workflow run is made up of one or more jobs.
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Write firebase_options.dart
        run: echo '${{ secrets.FIREBASE_OPTIONS }}' > lib/firebase_options.dart

      - name: Run Unit Tests
        run: flutter test

  integration-tests:
    runs-on: macOS-latest
    timeout-minutes: 30
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Cache firebase emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Write firebase_options.dart
        run: echo '${{ secrets.FIREBASE_OPTIONS }}' > lib/firebase_options.dart
      - name: Write GoogleService-info.plist
        run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist
      - name: Write google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
      - name: Write firebase.json
        run: echo '${{ secrets.FIREBASE_JSON }}' > firebase.json

      - name: Install firebase tools
        run: npm install -g firebase-tools

      - name: Authenticate firebase
        run: firebase use --token '${{ secrets.FIREBASE_TOKEN }}'

      - name: "Set up simulator"
        uses: futureware-tech/simulator-action@v4
        with:
          model: "iPhone 14"
          os_version: ">=13.0"
          wait_for_boot: true
      - name: "Run Integration Tests"
        run: firebase emulators:exec --token '${{ secrets.FIREBASE_TOKEN }}' 'flutter test integration_test --timeout=50m' --import=./data

  # # id of job, a string that is unique to the "jobs" node above.
  # iphone:
  #   # The type of machine to run the job on.
  #   runs-on: macOS-latest
  #   # Creates a build matrix for your jobs. You can define different
  #   # variations of an environment to run each job in.
  #   strategy:
  #     # When set to true, GitHub cancels all in-progress jobs if any
  #     # matrix job fails.
  #     fail-fast: true
  #   # Contains a sequence of tasks.
  #   steps:
  #     # The branch or tag ref that triggered the workflow will be
  #     # checked out.
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v3
  #     #Sets up Firebase Config files
  #     - name: Write firebase_options.dart
  #       run: echo '${{ secrets.FIREBASE_OPTIONS }}' > lib/firebase_options.dart
  #     - name: Write GoogleService-info.plist
  #       run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist
  #     - name: Write google-services.json
  #       run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
  #     - name: Write firebase.json
  #       run: echo '${{ secrets.FIREBASE_JSON }}' > firebase.json
  #     # Sets up a flutter environment.
  #     # https://github.com/marketplace/actions/flutter-action
  #     - name: Setup Flutter SDK
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable" # or: 'dev' or 'beta'
  #     # Unit Tests
  #     - name: Run Unit Tests
  #       run: flutter test
  #     - name: Install firebase tools
  #       run: npm install -g firebase-tools
  #     - name: Authenticate firebaes
  #       run: firebase use --token '${{ secrets.FIREBASE_TOKEN }}'
  #     # Set up IOS simulator and run integration tests
  #     - name: "Set up simulator"
  #       uses: futureware-tech/simulator-action@v3
  #       with:
  #         model: "iPhone 14"
  #         os_version: ">=13.0"
  #     - name: "Run Integration Tests"
  #       run: firebase emulators:exec --token '${{ secrets.FIREBASE_TOKEN }}' 'flutter test integration_test'

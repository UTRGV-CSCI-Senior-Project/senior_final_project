// Mocks generated by Mockito 5.4.4 from annotations
// in folio/test/widget/create_portfolio_screen.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i4;

import 'package:folio/repositories/portfolio_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PortfolioRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioRepository extends _i1.Mock
    implements _i2.PortfolioRepository {
  MockPortfolioRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createPortfolio(
    String? service,
    String? details,
    int? months,
    int? years,
    List<_i4.File>? images,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPortfolio,
          [
            service,
            details,
            months,
            years,
            images,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updatePortfolio({
    List<_i4.File>? images,
    Map<String, dynamic>? fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePortfolio,
          [],
          {
            #images: images,
            #fields: fields,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deletePortfolioImage(
    String? filePath,
    String? downloadUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePortfolioImage,
          [
            filePath,
            downloadUrl,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
